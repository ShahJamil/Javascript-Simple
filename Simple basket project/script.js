let grid_continer = document.querySelector('.grid_continer')
let btn_2 = document.querySelector('.btn_2')





let basket = []

let shopping = []


if (localStorage.getItem('basket')) {
    basket = JSON.parse(localStorage.getItem('basket'))
}
function getFood(num) {
    grid_continer.innerHTML = ''
    fetch('https://www.themealdb.com/api/json/v1/1/filter.php?i')
        .then(resp => resp.json())
        .then(data => {
            // console.log(data);
            shopping = data.meals
            data.meals.forEach((e, i) => {
                if (i < num) {
                    grid_continer.innerHTML += `

            
                <div class="grid_card">
                <div class="grid_img">
                    <img src="${e.strMealThumb}" alt="">
                    <button>50%</button>
                </div>
    
                <div class="grid_text">
                    <div class="t1">
                        <p class="p_2">${e.strMeal.slice(0, 20)}</p>
                        <p class="p_1">$${Number(e.idMeal.slice(-3, -1))}</p>
    
                    </div>
                    <div class="t2">
                        <div class="p1">
                            <svg width="49" height="23" viewBox="0 0 49 23" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <g filter="url(#filter0_d_2_1651)">
                                    <rect x="1.5" y="1.5" width="46" height="20" rx="5" fill="#F7F8FA"
                                        shape-rendering="crispEdges" />
                                    <path
                                        d="M19.1121 9.72554L15.5148 9.17806L13.9067 5.7641C13.8627 5.67063 13.7905 5.59496 13.7012 5.54897C13.4774 5.43324 13.2053 5.52968 13.0934 5.7641L11.4853 9.17806L7.88791 9.72554C7.78873 9.74038 7.69805 9.78934 7.62863 9.86352C7.5447 9.95386 7.49845 10.0754 7.50004 10.2014C7.50163 10.3274 7.55094 10.4477 7.63713 10.5356L10.2399 13.1929L9.62496 16.9452C9.61054 17.0324 9.61976 17.1222 9.65159 17.2043C9.68341 17.2864 9.73655 17.3575 9.805 17.4095C9.87344 17.4616 9.95444 17.4925 10.0388 17.4988C10.1232 17.5051 10.2076 17.4865 10.2824 17.4452L13.5 15.6736L16.7177 17.4452C16.8055 17.4941 16.9075 17.5104 17.0053 17.4926C17.2518 17.4481 17.4176 17.2033 17.3751 16.9452L16.7602 13.1929L19.3629 10.5356C19.4338 10.4629 19.4805 10.368 19.4947 10.2641C19.533 10.0045 19.3601 9.76412 19.1121 9.72554Z"
                                        fill="#1B1C21" />
                                    <path
                                        d="M30.3047 15.5H31.3359V13.748H32.5371V12.8047H31.3359V7.04492H29.8066C28.623 8.80859 27.3281 10.8711 26.1855 12.7871V13.748H30.3047V15.5ZM27.2637 12.8105V12.7402C28.1836 11.1875 29.291 9.44141 30.2402 8.02344H30.3105V12.8105H27.2637ZM34.4497 15.5586C34.8716 15.5586 35.2115 15.2129 35.2115 14.7969C35.2115 14.375 34.8716 14.0352 34.4497 14.0352C34.0337 14.0352 33.688 14.375 33.688 14.7969C33.688 15.2129 34.0337 15.5586 34.4497 15.5586ZM36.9718 15.5H38.0792L41.8409 8.02344V7.04492H36.2452V7.98828H40.7686V8.07031L36.9718 15.5Z"
                                        fill="#1B1C21" />
                                </g>
                                <defs>
                                    <filter id="filter0_d_2_1651" x="0.5" y="0.5" width="48" height="22"
                                        filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                                        <feFlood flood-opacity="0" result="BackgroundImageFix" />
                                        <feColorMatrix in="SourceAlpha" type="matrix"
                                            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                                            result="hardAlpha" />
                                        <feOffset />
                                        <feGaussianBlur stdDeviation="0.5" />
                                        <feComposite in2="hardAlpha" operator="out" />
                                        <feColorMatrix type="matrix"
                                            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                                        <feBlend mode="normal" in2="BackgroundImageFix"
                                            result="effect1_dropShadow_2_1651" />
                                        <feBlend mode="normal" in="SourceGraphic"
                                            in2="effect1_dropShadow_2_1651" result="shape" />
                                    </filter>
                                </defs>
                            </svg>
    
                            <svg width="69" height="21" viewBox="0 0 69 21" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <rect x="0.5" y="0.5" width="68" height="20" rx="5" fill="#F7F8FA" />
                                <path
                                    d="M8.2207 14.6992C9.9375 14.6992 11.1621 13.5098 11.1621 11.8047V11.793C11.1621 10.1582 10.0195 8.96875 8.43164 8.96875C7.66406 8.96875 7.00195 9.2793 6.62695 9.84766H6.5332L6.82031 6.98828H10.6934V6.04492H5.98828L5.54297 10.9023H6.45703C6.5625 10.7031 6.69727 10.5391 6.84375 10.3984C7.20703 10.0527 7.6875 9.88281 8.25 9.88281C9.3457 9.88281 10.1309 10.6855 10.1309 11.8105V11.8223C10.1309 12.9648 9.35742 13.7676 8.23242 13.7676C7.24219 13.7676 6.50977 13.123 6.41016 12.3145L6.4043 12.2676H5.39062L5.39648 12.332C5.51953 13.6855 6.64453 14.6992 8.2207 14.6992ZM15.5474 14.6992C17.4165 14.6992 18.5415 12.9941 18.5415 10.2754V10.2637C18.5415 7.54492 17.4165 5.8457 15.5474 5.8457C13.6783 5.8457 12.565 7.54492 12.565 10.2637V10.2754C12.565 12.9941 13.6783 14.6992 15.5474 14.6992ZM15.5474 13.7793C14.3345 13.7793 13.6255 12.4316 13.6255 10.2754V10.2637C13.6255 8.10742 14.3345 6.77148 15.5474 6.77148C16.7603 6.77148 17.481 8.10742 17.481 10.2637V10.2754C17.481 12.4316 16.7603 13.7793 15.5474 13.7793ZM20.0499 11.5703H23.9874V10.6211H20.0499V11.5703ZM25.9996 14.5H27.1071L30.8688 7.02344V6.04492H25.2731V6.98828H29.7965V7.07031L25.9996 14.5ZM34.9845 5.8457C33.2795 5.8457 32.0256 7.07031 32.0256 8.75781V8.76953C32.0256 10.3926 33.2092 11.5996 34.797 11.5996C35.9396 11.5996 36.7365 10.9844 37.047 10.293H37.1584C37.1584 10.3574 37.1584 10.4277 37.1525 10.4922C37.0881 12.2559 36.4611 13.7559 34.926 13.7559C34.0705 13.7559 33.4787 13.3164 33.2209 12.6074L33.1974 12.543H32.1369L32.1545 12.6191C32.4416 13.8672 33.4963 14.6992 34.9142 14.6992C36.965 14.6992 38.1662 13.0117 38.1662 10.1289V10.1172C38.1662 6.93555 36.5314 5.8457 34.9845 5.8457ZM34.9787 10.6797C33.883 10.6797 33.0861 9.87109 33.0861 8.74609V8.73438C33.0861 7.63867 33.9357 6.77734 34.9963 6.77734C36.0685 6.77734 36.9064 7.65625 36.9064 8.76953V8.77539C36.9064 9.87695 36.0744 10.6797 34.9787 10.6797Z"
                                    fill="#1B1C21" />
                                <path
                                    d="M44.4492 14.5H45.4688V10.5859C45.4688 9.69531 46.0957 8.97461 46.9219 8.97461C47.7188 8.97461 48.2344 9.46094 48.2344 10.2109V14.5H49.2539V10.4395C49.2539 9.63672 49.834 8.97461 50.7129 8.97461C51.6035 8.97461 52.0312 9.4375 52.0312 10.3691V14.5H53.0508V10.1348C53.0508 8.81055 52.3301 8.07227 51.041 8.07227C50.168 8.07227 49.4473 8.51172 49.1074 9.17969H49.0137C48.7207 8.52344 48.123 8.07227 47.2676 8.07227C46.4414 8.07227 45.8438 8.46484 45.5625 9.14453H45.4688V8.18359H44.4492V14.5ZM55.2857 6.96484C55.6724 6.96484 55.9888 6.64844 55.9888 6.26172C55.9888 5.875 55.6724 5.55859 55.2857 5.55859C54.899 5.55859 54.5826 5.875 54.5826 6.26172C54.5826 6.64844 54.899 6.96484 55.2857 6.96484ZM54.7701 14.5H55.7896V8.18359H54.7701V14.5ZM57.5675 14.5H58.587V10.7617C58.587 9.6543 59.2257 8.97461 60.2335 8.97461C61.2413 8.97461 61.71 9.51953 61.71 10.6562V14.5H62.7296V10.4102C62.7296 8.91016 61.9386 8.07227 60.5206 8.07227C59.589 8.07227 58.9972 8.46484 58.6807 9.13281H58.587V8.18359H57.5675V14.5Z"
                                    fill="#1B1C21" />
                            </svg>
    
    
    
                        </div>
                        <button  onclick="addBasket(${e.idMeal})"> <svg class="svg_1" width="23" height="21" viewBox="0 0 23 21" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <rect x="0.5" y="0.5" width="22" height="20" rx="5" fill="#F3BA00" />
                                <path
                                    d="M11.5991 10.6961V16.1863M6.04955 10.6961H11.5991H6.04955ZM17.1486 10.6961H11.5991H17.1486ZM11.5991 10.6961V5.20587V10.6961Z"
                                    stroke="white" stroke-width="3.5" stroke-linecap="round"
                                    stroke-linejoin="round" />
                            </svg></button>
                    </div>
                </div>
            </div>
                
                `
                }


            });
        })
}


let say = 8
getFood(say)
btn_2.addEventListener('click', () => {
    say += 8;
    if (say < 138) {
        getFood(say)
    } else {
        getFood(138)
    }
})






function addBasket(id) {
    let item = basket.find(e => e.food_id == id)
    if (!item) {
        let checkfood = shopping.find(e => e.idMeal == id)
        console.log(checkfood);

        let newItem = {
            id: basket.length + 1,
            food_id: id,
            Image:checkfood.strMealThumb,
            name: checkfood.strMeal.slice(0,20 ),
            count:1,
            price: Number(checkfood.idMeal.slice(-3, -1)),
            count_price: Number(checkfood.idMeal.slice(-3, -1 ))

        }
       basket.push(newItem)
       

    }else{
        item.count++;
        item.count_price = item.count * item.price
    }
    localStorage.setItem('basket',JSON.stringify(basket))
}